// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_slicemean_int
Rcpp::NumericVector cpp_slicemean_int(const arma::Cube<int>& x, double mis_val);
RcppExport SEXP _cubeStats_cpp_slicemean_int(SEXP xSEXP, SEXP mis_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<int>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mis_val(mis_valSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemean_int(x, mis_val));
    return rcpp_result_gen;
END_RCPP
}
// cpp_slicemean_num
Rcpp::NumericVector cpp_slicemean_num(const arma::Cube<double>& x, bool na_rm);
RcppExport SEXP _cubeStats_cpp_slicemean_num(SEXP xSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemean_num(x, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// cpp_slicemax_int
Rcpp::NumericVector cpp_slicemax_int(const arma::Cube<int>& x, double mis_val);
RcppExport SEXP _cubeStats_cpp_slicemax_int(SEXP xSEXP, SEXP mis_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<int>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mis_val(mis_valSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemax_int(x, mis_val));
    return rcpp_result_gen;
END_RCPP
}
// cpp_slicemax_num
Rcpp::NumericVector cpp_slicemax_num(const arma::Cube<double>& x, bool na_rm);
RcppExport SEXP _cubeStats_cpp_slicemax_num(SEXP xSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemax_num(x, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// cpp_slicemin_int
Rcpp::NumericVector cpp_slicemin_int(const arma::Cube<int>& x, double mis_val);
RcppExport SEXP _cubeStats_cpp_slicemin_int(SEXP xSEXP, SEXP mis_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<int>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mis_val(mis_valSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemin_int(x, mis_val));
    return rcpp_result_gen;
END_RCPP
}
// cpp_slicemin_num
Rcpp::NumericVector cpp_slicemin_num(const arma::Cube<double>& x, bool na_rm);
RcppExport SEXP _cubeStats_cpp_slicemin_num(SEXP xSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_slicemin_num(x, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// cpp_tubemean_int
Rcpp::NumericVector cpp_tubemean_int(const arma::Cube<int>& x, double mis_val);
RcppExport SEXP _cubeStats_cpp_tubemean_int(SEXP xSEXP, SEXP mis_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<int>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type mis_val(mis_valSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_tubemean_int(x, mis_val));
    return rcpp_result_gen;
END_RCPP
}
// cpp_tubemean_num
Rcpp::NumericVector cpp_tubemean_num(const arma::Cube<double>& x, bool na_rm);
RcppExport SEXP _cubeStats_cpp_tubemean_num(SEXP xSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Cube<double>& >::type x(xSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_tubemean_num(x, na_rm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cubeStats_cpp_slicemean_int", (DL_FUNC) &_cubeStats_cpp_slicemean_int, 2},
    {"_cubeStats_cpp_slicemean_num", (DL_FUNC) &_cubeStats_cpp_slicemean_num, 2},
    {"_cubeStats_cpp_slicemax_int", (DL_FUNC) &_cubeStats_cpp_slicemax_int, 2},
    {"_cubeStats_cpp_slicemax_num", (DL_FUNC) &_cubeStats_cpp_slicemax_num, 2},
    {"_cubeStats_cpp_slicemin_int", (DL_FUNC) &_cubeStats_cpp_slicemin_int, 2},
    {"_cubeStats_cpp_slicemin_num", (DL_FUNC) &_cubeStats_cpp_slicemin_num, 2},
    {"_cubeStats_cpp_tubemean_int", (DL_FUNC) &_cubeStats_cpp_tubemean_int, 2},
    {"_cubeStats_cpp_tubemean_num", (DL_FUNC) &_cubeStats_cpp_tubemean_num, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_cubeStats(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
